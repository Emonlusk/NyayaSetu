import React, { useState, useRef } from 'react';
import { Upload, AlertTriangle, CheckCircle, FileText, Download, Shield, Search } from 'lucide-react';
import { useLanguage } from './LanguageProvider';

interface AnalysisResult {
  overallScore: number;
  issues: {
    type: 'critical' | 'warning' | 'info';
    title: string;
    description: string;
    solution: string;
  }[];
  suggestions: string[];
}

const RentGuard: React.FC = () => {
  const { t } = useLanguage();
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);
  const [dragActive, setDragActive] = useState(false);
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleFileUpload = (file: File) => {
    setUploadedFile(file);
    setAnalysisResult(null);
  };

  const handleDrag = (e: React.DragEvent) => {
    e.preventDefault();
    e.stopPropagation();
    if (e.type === 'dragenter' || e.type === 'dragover') {
      setDragActive(true);
    } else if (e.type === 'dragleave') {
      setDragActive(false);
    }
  };

  const handleDrop = (e: React.DragEvent) => {
    e.preventDefault();
    e.stopPropagation();
    setDragActive(false);
    
    const files = e.dataTransfer.files;
    if (files && files[0]) {
      handleFileUpload(files[0]);
    }
  };

  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      handleFileUpload(e.target.files[0]);
    }
  };

  const analyzeDocument = () => {
    setIsAnalyzing(true);
    
    // Simulate document analysis
    setTimeout(() => {
      const mockAnalysis: AnalysisResult = {
        overallScore: 65,
        issues: [
          {
            type: 'critical',
            title: 'Illegal Lock-in Period Clause',
            description: 'The agreement contains a 2-year mandatory lock-in period with no exit option, which violates Maharashtra Rent Control Act, Section 13.',
            solution: 'Request removal of lock-in clause or limit it to 11 months as per legal guidelines.'
          },
          {
            type: 'warning',
            title: 'Excessive Security Deposit',
            description: 'Security deposit of 6 months rent exceeds the legal limit of 2-3 months in most states.',
            solution: 'Negotiate to reduce security deposit to 2-3 months rent maximum.'
          },
          {
            type: 'critical',
            title: 'Arbitrary Rent Increase Clause',
            description: 'Landlord reserves right to increase rent by any amount without notice period.',
            solution: 'Add clause limiting rent increase to 10% annually with 3-month notice period.'
          },
          {
            type: 'info',
            title: 'Missing Maintenance Responsibility',
            description: 'Unclear division of maintenance responsibilities between tenant and landlord.',
            solution: 'Add specific clauses defining who handles structural vs cosmetic maintenance.'
          }
        ],
        suggestions: [
          'Add clause for advance notice before landlord visits (24-48 hours)',
          'Include specific termination notice period for both parties',
          'Add clause about returning security deposit within 30 days',
          'Include inventory list of fixtures and fittings',
          'Add clause about peaceful enjoyment of premises'
        ]
      };
      
      setAnalysisResult(mockAnalysis);
      setIsAnalyzing(false);
    }, 3000);
  };

  const downloadReport = () => {
    if (!analysisResult) return;
    
    const report = `
RENTGUARD ANALYSIS REPORT
Generated by NyayaSetu AI Legal Assistant
Date: ${new Date().toLocaleDateString()}
Document: ${uploadedFile?.name}

OVERALL SCORE: ${analysisResult.overallScore}/100

ISSUES IDENTIFIED:
${analysisResult.issues.map((issue, index) => `
${index + 1}. ${issue.title} (${issue.type.toUpperCase()})
   Description: ${issue.description}
   Solution: ${issue.solution}
`).join('')}

SUGGESTIONS FOR IMPROVEMENT:
${analysisResult.suggestions.map((suggestion, index) => `
${index + 1}. ${suggestion}
`).join('')}

---
This report is generated by AI and should be reviewed by a legal expert.
For detailed legal advice, consult with a qualified lawyer.
`;
    
    const element = document.createElement('a');
    const file = new Blob([report], { type: 'text/plain' });
    element.href = URL.createObjectURL(file);
    element.download = `RentGuard_Analysis_${new Date().getTime()}.txt`;
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
  };

  return (
    <div className="max-w-6xl mx-auto">
      <div className="mb-8">
        <h2 className="text-3xl font-bold text-gray-900 mb-2">RentGuard - Smart Agreement Analyzer</h2>
        <p className="text-gray-600">Upload your rental agreement to identify illegal clauses and get legal protection advice</p>
      </div>

      <div className="grid lg:grid-cols-2 gap-8">
        {/* Upload Section */}
        <div className="bg-white p-6 rounded-2xl shadow-sm border border-gray-200">
          <h3 className="text-xl font-bold text-gray-900 mb-6 flex items-center">
            <Shield className="text-orange-500 mr-2" size={24} />
            Document Upload
          </h3>

          <div
            className={`
              border-2 border-dashed rounded-xl p-8 text-center transition-all
              ${dragActive ? 'border-orange-500 bg-orange-50' : 'border-gray-300 hover:border-gray-400'}
            `}
            onDragEnter={handleDrag}
            onDragLeave={handleDrag}
            onDragOver={handleDrag}
            onDrop={handleDrop}
          >
            <input
              ref={fileInputRef}
              type="file"
              onChange={handleFileSelect}
              accept=".pdf,.doc,.docx,.txt,.jpg,.png"
              className="hidden"
            />
            
            {uploadedFile ? (
              <div className="space-y-4">
                <FileText size={48} className="text-green-500 mx-auto" />
                <div>
                  <h4 className="font-medium text-gray-900">{uploadedFile.name}</h4>
                  <p className="text-sm text-gray-500">
                    {(uploadedFile.size / 1024 / 1024).toFixed(2)} MB
                  </p>
                </div>
                <button
                  onClick={() => fileInputRef.current?.click()}
                  className="text-orange-600 hover:text-orange-700 font-medium"
                >
                  Upload Different File
                </button>
              </div>
            ) : (
              <div className="space-y-4">
                <Upload size={48} className="text-gray-400 mx-auto" />
                <div>
                  <p className="text-lg font-medium text-gray-900 mb-2">
                    Drop your rental agreement here
                  </p>
                  <p className="text-gray-500 mb-4">
                    Supports PDF, DOC, DOCX, TXT, JPG, PNG files
                  </p>
                  <button
                    onClick={() => fileInputRef.current?.click()}
                    className="bg-gradient-to-r from-orange-500 to-blue-500 text-white px-6 py-2 rounded-lg font-medium hover:shadow-lg transition-all"
                  >
                    Choose File
                  </button>
                </div>
              </div>
            )}
          </div>

          {uploadedFile && (
            <div className="mt-6">
              <button
                onClick={analyzeDocument}
                disabled={isAnalyzing}
                className="w-full bg-gradient-to-r from-orange-500 to-red-600 text-white py-3 px-6 rounded-lg font-medium hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all flex items-center justify-center space-x-2"
              >
                {isAnalyzing ? (
                  <>
                    <div className="w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin"></div>
                    <span>Analyzing Agreement...</span>
                  </>
                ) : (
                  <>
                    <Search size={20} />
                    <span>Analyze for Legal Issues</span>
                  </>
                )}
              </button>
            </div>
          )}

          {/* Common Issues Info */}
          <div className="mt-8 p-4 bg-gradient-to-r from-orange-50 to-red-50 rounded-xl">
            <h4 className="font-semibold text-gray-900 mb-3">Common Issues We Detect:</h4>
            <ul className="space-y-2 text-sm text-gray-700">
              <li className="flex items-start space-x-2">
                <div className="w-1.5 h-1.5 bg-red-500 rounded-full mt-2"></div>
                <span>Illegal lock-in periods and exit clauses</span>
              </li>
              <li className="flex items-start space-x-2">
                <div className="w-1.5 h-1.5 bg-orange-500 rounded-full mt-2"></div>
                <span>Excessive security deposits</span>
              </li>
              <li className="flex items-start space-x-2">
                <div className="w-1.5 h-1.5 bg-yellow-500 rounded-full mt-2"></div>
                <span>Arbitrary rent increase clauses</span>
              </li>
              <li className="flex items-start space-x-2">
                <div className="w-1.5 h-1.5 bg-blue-500 rounded-full mt-2"></div>
                <span>Missing tenant rights and protections</span>
              </li>
            </ul>
          </div>
        </div>

        {/* Analysis Results */}
        <div className="bg-white p-6 rounded-2xl shadow-sm border border-gray-200">
          <h3 className="text-xl font-bold text-gray-900 mb-6 flex items-center">
            <AlertTriangle className="text-red-500 mr-2" size={24} />
            Analysis Results
          </h3>

          {analysisResult ? (
            <div className="space-y-6">
              {/* Overall Score */}
              <div className="text-center p-6 bg-gray-50 rounded-xl">
                <div className="text-3xl font-bold mb-2">
                  <span className={`
                    ${analysisResult.overallScore >= 80 ? 'text-green-600' : 
                      analysisResult.overallScore >= 60 ? 'text-yellow-600' : 'text-red-600'}
                  `}>
                    {analysisResult.overallScore}/100
                  </span>
                </div>
                <p className="text-gray-600">
                  {analysisResult.overallScore >= 80 ? 'Good Agreement' :
                   analysisResult.overallScore >= 60 ? 'Needs Attention' : 'Multiple Issues Found'}
                </p>
              </div>

              {/* Issues */}
              <div className="space-y-4">
                <h4 className="font-semibold text-gray-900">Issues Identified:</h4>
                {analysisResult.issues.map((issue, index) => (
                  <div
                    key={index}
                    className={`
                      p-4 rounded-lg border-l-4
                      ${issue.type === 'critical' ? 'border-red-500 bg-red-50' :
                        issue.type === 'warning' ? 'border-yellow-500 bg-yellow-50' :
                        'border-blue-500 bg-blue-50'}
                    `}
                  >
                    <div className="flex items-start space-x-3">
                      {issue.type === 'critical' ? (
                        <AlertTriangle className="text-red-500 mt-0.5" size={20} />
                      ) : issue.type === 'warning' ? (
                        <AlertTriangle className="text-yellow-500 mt-0.5" size={20} />
                      ) : (
                        <CheckCircle className="text-blue-500 mt-0.5" size={20} />
                      )}
                      <div className="flex-1">
                        <h5 className="font-medium text-gray-900 mb-1">{issue.title}</h5>
                        <p className="text-sm text-gray-700 mb-2">{issue.description}</p>
                        <p className="text-sm font-medium text-gray-900">
                          💡 Solution: {issue.solution}
                        </p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {/* Suggestions */}
              <div>
                <h4 className="font-semibold text-gray-900 mb-3">Recommendations:</h4>
                <ul className="space-y-2">
                  {analysisResult.suggestions.map((suggestion, index) => (
                    <li key={index} className="flex items-start space-x-2 text-sm text-gray-700">
                      <CheckCircle className="text-green-500 mt-0.5" size={16} />
                      <span>{suggestion}</span>
                    </li>
                  ))}
                </ul>
              </div>

              {/* Actions */}
              <div className="flex space-x-3 pt-4 border-t border-gray-200">
                <button
                  onClick={downloadReport}
                  className="flex-1 bg-green-600 text-white py-2 px-4 rounded-lg font-medium hover:bg-green-700 transition-colors flex items-center justify-center space-x-2"
                >
                  <Download size={16} />
                  <span>Download Report</span>
                </button>
                <button className="flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg font-medium hover:bg-blue-700 transition-colors">
                  Get Legal Help
                </button>
              </div>
            </div>
          ) : (
            <div className="text-center py-12">
              <Shield size={48} className="text-gray-300 mx-auto mb-4" />
              <p className="text-gray-500">Upload and analyze your rental agreement to see detailed results</p>
            </div>
          )}
        </div>
      </div>

      {/* Additional Features */}
      <div className="mt-8 bg-gradient-to-r from-orange-500 to-red-500 p-6 rounded-2xl text-white">
        <h3 className="text-xl font-bold mb-4">🚨 Landlord Harassment Detection</h3>
        <p className="mb-4">
          Upload WhatsApp chats or email conversations to detect harassment patterns and get legal advice.
        </p>
        <button className="bg-white/20 hover:bg-white/30 px-6 py-2 rounded-lg font-medium transition-colors">
          Analyze Messages
        </button>
      </div>
    </div>
  );
};

export default RentGuard;